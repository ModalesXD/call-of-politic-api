generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Player {
  id        String   @id @default(cuid())
  name      String   @unique
  countryId String
  ideologyId String
  image     String
  rankId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  country   Country  @relation(fields: [countryId], references: [id])
  rank      Rank     @relation(fields: [rankId], references: [id])
  ideology  Ideology @relation(fields: [ideologyId], references: [id])
  votes     Vote[]   @relation("PlayerVotes")
  voterVotes Vote[]  @relation("VoterPlayerVotes")
  elections PlayerElections[]

  @@index([name])
}

model Announcement {
  id          String   @id @default(cuid())
  title       String
  description String
  content     String
  countryId   String
  categoryId  String
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  country     Country  @relation(fields: [countryId], references: [id])
  category    Category @relation(fields: [categoryId], references: [id])

  @@index([title])
}

model Npc {
  id            String   @id @default(cuid())
  name          String
  countryId     String
  ideologyId    String
  image         String
  rankId        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  country       Country  @relation(fields: [countryId], references: [id])
  rank          Rank     @relation(fields: [rankId], references: [id])
  ideology      Ideology @relation(fields: [ideologyId], references: [id])
  votes         Vote[]   @relation("NpcVotes")
  voterVotes    Vote[]   @relation("VoterNpcVotes")
  playerElections PlayerElections[]

  @@index([name])
}

model Rank {
  id         String  @id @default(cuid())
  name       String  @unique
  image      String
  permission String

  players    Player[]
  npcs       Npc[]

  @@index([name])
}

model Country {
  id            String   @id @default(cuid())
  name          String   @unique
  image         String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  players       Player[]
  npcs          Npc[]
  announcements Announcement[]
  cities        City[]
  states        State[]
  events        Event[]
  statistics    Statistic[]
  elections     Elections[]

  @@index([name])
}

model Category {
  id            String   @id @default(cuid())
  name          String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  events        Event[]
  statistics    Statistic[]
  announcements Announcement[]

  @@index([name])
}

model Ideology {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  players   Player[]
  npcs      Npc[]
  
  @@index([name])
}

model City {
  id        String   @id @default(cuid())
  name      String
  countryId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  country   Country  @relation(fields: [countryId], references: [id])

  @@index([name])
}

model State {
  id        String   @id @default(cuid())
  name      String
  countryId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  country   Country  @relation(fields: [countryId], references: [id])

  @@index([name])
}

model Event {
  id          String   @id @default(cuid())
  name        String
  description String
  content     String
  countryId   String
  categoryId  String
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  country     Country  @relation(fields: [countryId], references: [id])
  category    Category @relation(fields: [categoryId], references: [id])

  @@index([name])
}

model Statistic {
  id          String   @id @default(cuid())
  name        String
  description String
  content     String
  countryId   String
  categoryId  String
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  country     Country  @relation(fields: [countryId], references: [id])
  category    Category @relation(fields: [categoryId], references: [id])

  @@index([name])
}

model Elections {
  id        String   @id @default(cuid())
  countryId String
  startDate DateTime
  endDate   DateTime

  country   Country  @relation(fields: [countryId], references: [id])
  candidates PlayerElections[]
  votes      Vote[] @relation("ElectionVotes")

  @@index([countryId, startDate])
}

model PlayerElections {
  id          String   @id @default(cuid())
  electionId  String
  playerId    String?
  npcId       String?

  election    Elections @relation(fields: [electionId], references: [id])
  player      Player?   @relation(fields: [playerId], references: [id])
  npc         Npc?      @relation(fields: [npcId], references: [id])
  votes       Vote[]    @relation(name: "CandidateVotes")

  @@unique([electionId, playerId, npcId])
}

model Vote {
  id             String   @id @default(cuid())
  electionId     String
  voterPlayerId  String?
  voterNpcId     String?
  candidateId    String
  voterPlayer    Player?  @relation(fields: [voterPlayerId], references: [id], name: "VoterPlayerVotes")
  voterNpc       Npc?     @relation(fields: [voterNpcId], references: [id], name: "VoterNpcVotes")
  candidate      PlayerElections @relation(fields: [candidateId], references: [id], name: "CandidateVotes")
  election       Elections       @relation(fields: [electionId], references: [id], name: "ElectionVotes")
  player         Player?         @relation(fields: [voterPlayerId], references: [id], name: "PlayerVotes")
  npc            Npc?            @relation(fields: [voterNpcId], references: [id], name: "NpcVotes")

  @@unique([electionId, voterPlayerId])
  @@unique([electionId, voterNpcId])
}
